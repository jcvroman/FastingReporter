name: ci-commit-cycle
    # Continuous Delivery (CD): Testing Strategy for DevOps: Commit Cyle, Acceptance Cycle, Release Cycle, Product Cycle.
    #   Commit Cycle: Unit Test, Coding Standards Asserted, Common Error Detection.

env:
    XC_VERSION: ${{ '12.4' }}
    XC_PROJECT: ${{ 'FastingReporter.xcodeproj' }}
    XC_CONFIGURATION: ${{ 'Debug' }}
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    # SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
on:
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]

jobs:
    # SwiftLint: Check Swift style and conventions on ubuntu
    #   NOTE: Gives annotations on Jobs page.
    SwiftLint:
        runs-on: ubuntu-latest

        steps:
        - name: Checkout repository
          uses: actions/checkout@v2
      
        - name: SwiftLint Scan
          uses: norio-nomura/action-swiftlint@3.1.0

    # SonarCloud: Detect bugs, vulnerabilities and code smells on ubuntu
    #SonarCloud:
    #    runs-on: ubuntu-latest
    #
    #    steps:
    #    - name: Checkout repository
    #      uses: actions/checkout@v2
    #      with:
    #        # Disabling shallow clone is recommended for improving relevancy of reporting
    #        fetch-depth: 0
    #
    #    - name: SonarCloud Scan
    #      uses: sonarsource/sonarcloud-github-action@master

    # Build: Build and Test per Config Matrix
    Build:
        runs-on: macOS-latest
        strategy:
            matrix:
                run-config:
                - { scheme: 'FastingReporter', destination: 'platform=iOS Simulator,OS=14.4,name=iPhone 8', testPlan: 'CommitCycle_iOS' }

        steps:
        - name: Checkout Project
          uses: actions/checkout@v2

        #- name: Homebrew build helpers install
        #  run: brew bundle

        - name: Show the currently detailed version of Xcode for CLI
          run: xcode-select -p

        - name: Show what's in Applications
          run: ls -al /Applications

        #- name: Select Xcode
        #  run: |
        #       sudo xcode-select -switch /Applications/Xcode_$XC_VERSION.app
        #       xcodebuild -version

        - name: Show Build Version
          run: xcodebuild -version
          
        - name: Show Build Settings
          run: xcodebuild -project "$XC_PROJECT" -scheme '${{ matrix.run-config['scheme'] }}' -showBuildSettings
          #run: xcodebuild -project FastingReporter.xcodeproj -scheme 'FastingReporter' -showBuildSettings

        - name: Show Build SDK
          run: xcodebuild -project "$XC_PROJECT" -scheme '${{ matrix.run-config['scheme'] }}' -showsdks

        - name: Show Available Destinations
          run: xcodebuild -project "$XC_PROJECT" -scheme '${{ matrix.run-config['scheme'] }}' -showdestinations

        # NOTE: Double checking SwiftLint Scan on macOS.
        - name: Show SwiftLint Version
          run: swiftlint version
          
        - name: SwiftLint Scan
          run: swiftlint lint

        - name: Build and Test per Config Matrix
          run: |
            xcodebuild clean test \
                -project "$XC_PROJECT" \
                -scheme '${{ matrix.run-config['scheme'] }}' \
                -configuration "$XC_CONFIGURATION" \
                -destination '${{ matrix.run-config['destination'] }}' \
                -testPlan '${{ matrix.run-config['testPlan'] }}' \
                -showBuildTimingSummary
